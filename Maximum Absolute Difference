Maximum Absolute Difference

Problem Description

You are given an array of N integers, A1, A2, …. AN.

Return the maximum value of f(i, j) for all 1 ≤ i, j ≤ N. f(i, j) is defined as |A[i] - A[j]| + |i - j|, where |x| denotes absolute value of x.



Problem Constraints

1 <= N <= 100000

-109 <= A[i] <= 109



Input Format

First argument is an integer array A of size N.



Output Format

Return an integer denoting the maximum value of f(i, j).



Example Input

Input 1:

A = [1, 3, -1]
Input 2:

 
A = [2]


Example Output

Output 1:

5
Output 2:

0


Example Explanation

Explanation 1:

f(1, 1) = f(2, 2) = f(3, 3) = 0
f(1, 2) = f(2, 1) = |1 - 3| + |1 - 2| = 3
f(1, 3) = f(3, 1) = |1 - (-1)| + |1 - 3| = 4
f(2, 3) = f(3, 2) = |3 - (-1)| + |2 - 3| = 5

So, we return 5.
Explanation 2:

Only possibility is i = 1 and j = 1. That gives answer = 0.


====================================================================
Solution Python 3.5
====================================================================

class Solution:
    # @param A : list of integers
    # @return an integer
    def maxArr(self, A):
        add=0
        m=-1*1e9
        n=1*1e9
        m1=-1*1e9
        n1=1*1e9
        for i in range (len(A)):
               m= max(m,A[i]+i)
               n= min(n,A[i]+i)
               m1= max(m1,A[i]-i)
               n1= min(n1,A[i]-i)
        add= max(add,m1-n1)
        add= max(add,m-n)
        add= int(add)
        return add
